"""
    Lob

    The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?   # noqa: E501

    The version of the OpenAPI document: 1.3.0
    Contact: lob-openapi@lob.com
    Generated by: https://openapi-generator.tech
"""


from distutils.command.upload import upload
from email.headerregistry import Address
import string
from tkinter.messagebox import NO
import unittest
import warnings
import datetime
import uuid

import lob_python
import os
from dotenv import load_dotenv
from dateutil.parser import *

from lob_python.api.uploads_api import UploadsApi
from lob_python.model.export_model import ExportModel
from lob_python.model.upload_writable import UploadWritable


class TestCampaignsApi(unittest.TestCase):
    """CampaignsApi unit test stubs"""

    @classmethod
    def setUpClass(self):
        load_dotenv()
        warnings.simplefilter("ignore", ResourceWarning)
        self.upload_ids = []
        self.configuration = lob_python.Configuration(
            username = os.getenv('LOB_API_TEST_KEY')
        )
        with lob_python.ApiClient(self.configuration) as self.api_client:
            self.api = UploadsApi(self.api_client)  # noqa: E501
        self.upload_writable  = UploadWritable(
            campaign_id = "campaign_fake",
            column_mapping = {
                "name": "name",
                "address_line1": "address_line1",
                "address_line2": "address_line2",
                "address_city": "address_city",
                "address_state": "address_state",
                "address_zip": "address_zip",
            },
        )
        self.upl_id = self.api.create_upload(self.upload_writable).id

    @classmethod
    def tearDownClass(self):
        del self.api
        del self.configuration
        del self.upload_writable

    def test_create200(self):
        """Test case for create

        create  # noqa: E501
        """

        export_writable  = ExportModel(
            type = "all"
        )
        created_export = self.api.create_export(self.upl_id, export_writable)
        self.assertIsNotNone(created_export.export_id)

    def test_get200(self):
        """Test case for get

        get  # noqa: E501
        """
        export_writable  = ExportModel(
            type = "all"
        )
        created_export = self.api.create_export(self.upl_id, export_writable)
        retrieved_export = self.api.get_export(self.upl_id, created_export.export_id)
        self.assertIsNotNone(retrieved_export.id)
        self.assertEqual(retrieved_export.id, created_export.export_id)


if __name__ == '__main__':
    unittest.main()
